worker_processes auto;
error_log /var/log/nginx/error.log;

events {
worker_connections 100;
}

http {
server_tokens off;

open_file_cache max=20000 inactive=10s;
open_file_cache_valid    20s;
open_file_cache_min_uses 2;
open_file_cache_errors   on;

keepalive_timeout  65;
reset_timedout_connection  on;

server_names_hash_max_size      4096;
server_names_hash_bucket_size   256;
client_max_body_size            100m;
client_body_buffer_size         128k;
output_buffers                  2       32k;
postpone_output                 1460;

proxy_connect_timeout           10;
proxy_send_timeout              60;
proxy_read_timeout              60;
proxy_buffer_size               32k;
proxy_buffers                   64       32k;
proxy_busy_buffers_size         64k;
proxy_temp_file_write_size      64k;

gzip on;
gzip_min_length 4096;
gzip_buffers 64 8k;
gzip_comp_level 4;
gzip_http_version 1.1;
gzip_proxied any;
gzip_types text/plain text/xml text/css application/json application/x-javascript  application/xml application/xml+rss text/javascript;
gzip_disable "MSIE [1-6]\.";

# custom vhost monitoring module
# https://github.com/vozlt/nginx-module-vts#installation
vhost_traffic_status_zone;

include mime.types;
default_type application/octet-stream;

resolver 8.8.8.8 ipv6=off;
resolver_timeout 1s;

log_by_lua 'metrics:handle_request()';
log_format main escape=json
  '{'
    '"header_host":"$host",'
    '"remote_addr":"$remote_addr",'
    '"request_time":"$request_time",'
    '"time_local":"$time_local",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent",'
    '"request_id":"$request_id",'
    '"upstream_addr":"$upstream_addr"'
  '}';
access_log /var/log/nginx/access.log main;

sendfile on;
tcp_nodelay on;
keepalive_requests 5;
keepalive_disable msie6 safari;

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

proxy_max_temp_file_size 0;
proxy_redirect off;
proxy_set_header Host $host;
proxy_set_header X-Real-IP $remote_addr;
proxy_set_header X-Forwarded-By $host;
proxy_set_header X-Forwarded-Host $host;
proxy_set_header X-Forwarded-Server $host;
proxy_set_header X-Forwarded-Proto $scheme;
proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
proxy_set_header HTTPS $https;
proxy_set_header Upgrade $http_upgrade;
proxy_set_header Connection $connection_upgrade;

server {
  listen 80;
  server_name _;
  location / {
    proxy_pass http://127.0.0.1:3000;
  }
}
}